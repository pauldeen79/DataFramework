// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 8.0.5
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

#nullable enable
namespace DataFramework.Pipelines.Builders
{
    public partial class PipelineSettingsBuilder : System.ComponentModel.INotifyPropertyChanged
    {
        private DataFramework.Pipelines.Domains.ConcurrencyCheckBehavior _concurrencyCheckBehavior;

        private DataFramework.Pipelines.Domains.EntityClassType _entityClassType;

        private string _defaultEntityNamespace;

        private string _defaultBuilderNamespace;

        private bool _addComponentModelAttributes;

        private bool _addValidationCodeInConstructor;

        private bool _addToBuilderMethod;

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        public DataFramework.Pipelines.Domains.ConcurrencyCheckBehavior ConcurrencyCheckBehavior
        {
            get
            {
                return _concurrencyCheckBehavior;
            }
            set
            {
                _concurrencyCheckBehavior = value;
                HandlePropertyChanged(nameof(ConcurrencyCheckBehavior));
            }
        }

        public DataFramework.Pipelines.Domains.EntityClassType EntityClassType
        {
            get
            {
                return _entityClassType;
            }
            set
            {
                _entityClassType = value;
                HandlePropertyChanged(nameof(EntityClassType));
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings = true)]
        public string DefaultEntityNamespace
        {
            get
            {
                return _defaultEntityNamespace;
            }
            set
            {
                _defaultEntityNamespace = value ?? throw new System.ArgumentNullException(nameof(value));
                HandlePropertyChanged(nameof(DefaultEntityNamespace));
            }
        }

        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings = true)]
        public string DefaultBuilderNamespace
        {
            get
            {
                return _defaultBuilderNamespace;
            }
            set
            {
                _defaultBuilderNamespace = value ?? throw new System.ArgumentNullException(nameof(value));
                HandlePropertyChanged(nameof(DefaultBuilderNamespace));
            }
        }

        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool AddComponentModelAttributes
        {
            get
            {
                return _addComponentModelAttributes;
            }
            set
            {
                _addComponentModelAttributes = value;
                HandlePropertyChanged(nameof(AddComponentModelAttributes));
            }
        }

        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool AddValidationCodeInConstructor
        {
            get
            {
                return _addValidationCodeInConstructor;
            }
            set
            {
                _addValidationCodeInConstructor = value;
                HandlePropertyChanged(nameof(AddValidationCodeInConstructor));
            }
        }

        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool AddToBuilderMethod
        {
            get
            {
                return _addToBuilderMethod;
            }
            set
            {
                _addToBuilderMethod = value;
                HandlePropertyChanged(nameof(AddToBuilderMethod));
            }
        }

        public PipelineSettingsBuilder(DataFramework.Pipelines.PipelineSettings source)
        {
            if (source is null) throw new System.ArgumentNullException(nameof(source));
            _concurrencyCheckBehavior = source.ConcurrencyCheckBehavior;
            _entityClassType = source.EntityClassType;
            _defaultEntityNamespace = source.DefaultEntityNamespace;
            _defaultBuilderNamespace = source.DefaultBuilderNamespace;
            _addComponentModelAttributes = source.AddComponentModelAttributes;
            _addValidationCodeInConstructor = source.AddValidationCodeInConstructor;
            _addToBuilderMethod = source.AddToBuilderMethod;
        }

        public PipelineSettingsBuilder()
        {
            _defaultEntityNamespace = string.Empty;
            _defaultBuilderNamespace = string.Empty;
            _addComponentModelAttributes = true;
            _addValidationCodeInConstructor = true;
            _addToBuilderMethod = true;
            SetDefaultValues();
        }

        public DataFramework.Pipelines.PipelineSettings Build()
        {
            return new DataFramework.Pipelines.PipelineSettings(ConcurrencyCheckBehavior, EntityClassType, DefaultEntityNamespace, DefaultBuilderNamespace, AddComponentModelAttributes, AddValidationCodeInConstructor, AddToBuilderMethod);
        }

        partial void SetDefaultValues();

        public DataFramework.Pipelines.Builders.PipelineSettingsBuilder WithConcurrencyCheckBehavior(DataFramework.Pipelines.Domains.ConcurrencyCheckBehavior concurrencyCheckBehavior)
        {
            ConcurrencyCheckBehavior = concurrencyCheckBehavior;
            return this;
        }

        public DataFramework.Pipelines.Builders.PipelineSettingsBuilder WithEntityClassType(DataFramework.Pipelines.Domains.EntityClassType entityClassType)
        {
            EntityClassType = entityClassType;
            return this;
        }

        public DataFramework.Pipelines.Builders.PipelineSettingsBuilder WithDefaultEntityNamespace(string defaultEntityNamespace)
        {
            if (defaultEntityNamespace is null) throw new System.ArgumentNullException(nameof(defaultEntityNamespace));
            DefaultEntityNamespace = defaultEntityNamespace;
            return this;
        }

        public DataFramework.Pipelines.Builders.PipelineSettingsBuilder WithDefaultBuilderNamespace(string defaultBuilderNamespace)
        {
            if (defaultBuilderNamespace is null) throw new System.ArgumentNullException(nameof(defaultBuilderNamespace));
            DefaultBuilderNamespace = defaultBuilderNamespace;
            return this;
        }

        public DataFramework.Pipelines.Builders.PipelineSettingsBuilder WithAddComponentModelAttributes(bool addComponentModelAttributes = true)
        {
            AddComponentModelAttributes = addComponentModelAttributes;
            return this;
        }

        public DataFramework.Pipelines.Builders.PipelineSettingsBuilder WithAddValidationCodeInConstructor(bool addValidationCodeInConstructor = true)
        {
            AddValidationCodeInConstructor = addValidationCodeInConstructor;
            return this;
        }

        public DataFramework.Pipelines.Builders.PipelineSettingsBuilder WithAddToBuilderMethod(bool addToBuilderMethod = true)
        {
            AddToBuilderMethod = addToBuilderMethod;
            return this;
        }

        protected void HandlePropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }
}
#nullable disable
