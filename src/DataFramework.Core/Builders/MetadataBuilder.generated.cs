// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 7.0.5
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace DataFramework.Core.Builders
{
#nullable enable
    public partial class MetadataBuilder
    {
        public string Name
        {
            get
            {
                return _nameDelegate.Value;
            }
            set
            {
                _nameDelegate = new (() => value);
            }
        }

        public object? Value
        {
            get
            {
                return _valueDelegate.Value;
            }
            set
            {
                _valueDelegate = new (() => value);
            }
        }

        public DataFramework.Abstractions.IMetadata Build()
        {
            #pragma warning disable CS8604 // Possible null reference argument.
            #pragma warning disable CS8600 // Converting null literal or possible null value to non-nullable type.
            return new DataFramework.Core.Metadata(Name, Value);
            #pragma warning restore CS8600 // Converting null literal or possible null value to non-nullable type.
            #pragma warning restore CS8604 // Possible null reference argument.
        }

        public System.Collections.Generic.IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(System.ComponentModel.DataAnnotations.ValidationContext validationContext)
        {
            #pragma warning disable CS8604 // Possible null reference argument.
            #pragma warning disable CS8600 // Converting null literal or possible null value to non-nullable type.
            var instance = new DataFramework.Core.MetadataBase(Name, Value);
            #pragma warning restore CS8600 // Converting null literal or possible null value to non-nullable type.
            #pragma warning restore CS8604 // Possible null reference argument.
            var results = new System.Collections.Generic.List<System.ComponentModel.DataAnnotations.ValidationResult>();
            System.ComponentModel.DataAnnotations.Validator.TryValidateObject(instance, new System.ComponentModel.DataAnnotations.ValidationContext(instance, null, null), results, true);
            return results;
        }

        public MetadataBuilder WithName(string name)
        {
            Name = name;
            return this;
        }

        public MetadataBuilder WithName(System.Func<string> nameDelegate)
        {
            _nameDelegate = new (nameDelegate);
            return this;
        }

        public MetadataBuilder WithValue(object? value)
        {
            Value = value;
            return this;
        }

        public MetadataBuilder WithValue(System.Func<object?> valueDelegate)
        {
            _valueDelegate = new (valueDelegate);
            return this;
        }

        public MetadataBuilder()
        {
            #pragma warning disable CS8603 // Possible null reference return.
            _nameDelegate = new (() => string.Empty);
            _valueDelegate = new (() => default(object?));
            #pragma warning restore CS8603 // Possible null reference return.
        }

        public MetadataBuilder(DataFramework.Abstractions.IMetadata source)
        {
            _nameDelegate = new (() => source.Name);
            _valueDelegate = new (() => source.Value);
        }

        protected System.Lazy<string> _nameDelegate;

        protected System.Lazy<object?> _valueDelegate;
    }
#nullable restore
}

