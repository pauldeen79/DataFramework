<#@ Template Language="C#" #>
<#@ Property Name="GenerateMultipleFiles" Type="System.Boolean" DefaultValue="true" AddPropertySetter="True" #>
<#@ Property Name="BasePath" Type="System.String" AddPropertySetter="True" #>
<#@ Property Name="ConnectionString" Type="System.String" Required="true" DefaultValue="Data Source=.;Initial Catalog=dbname;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=True;ApplicationIntent=ReadWrite;MultiSubnetFailover=False" defaultValueIsLiteral="true" AddPropertySetter="True" #>
<#@ Property Name="EntitiesNamespace" Type="System.String" Required="true" DefaultValue="Entities" defaultValueIsLiteral="true" AddPropertySetter="True" #>
<#@ Property Name="QueriesNamespace" Type="System.String" Required="true" DefaultValue="Queries" defaultValueIsLiteral="true" AddPropertySetter="True" #>
<#@ Property Name="DataObjectInfoProviderNamespace" Type="System.String" Required="true" DefaultValue="DataObjectInfoProviders" defaultValueIsLiteral="true" AddPropertySetter="True" #>
<#@ Property Name="RepositoriesNamespace" Type="System.String" Required="true" DefaultValue="Repositories" defaultValueIsLiteral="true" AddPropertySetter="True" #>
<#@ Property Name="AddPropertiesForRelations" Type="System.Boolean" AddPropertySetter="True" #>
<#@ Property Name="GenerateRepositories" Type="System.Boolean" DefaultValue="true" AddPropertySetter="True" #>
<#@ Property Name="GenerateEntities" Type="System.Boolean" DefaultValue="true" AddPropertySetter="True" #>
<#@ Property Name="GenerateQueries" Type="System.Boolean" DefaultValue="true" AddPropertySetter="True" #>
<#@ Property Name="GenerateDataObjectInfoProviders" Type="System.Boolean" DefaultValue="true" AddPropertySetter="True" #>
<#@ Property Name="GenerateDatabaseSchema" Type="System.Boolean" DefaultValue="true" AddPropertySetter="True" #>
<#@ Property Name="GenerateModelDump" Type="System.Boolean" DefaultValue="true" AddPropertySetter="True" #>
<#@ Property Name="DryRun" Type="System.Boolean" AddPropertySetter="True" #>
<#@ Property Name="LastGeneratedFilesFileName" Type="System.String" AddPropertySetter="True" #>
<#@ ShadowEnumProperty Name="EntityClassType" EnumType="DataFramework.ModelFramework.MetadataNames.EntityClassType" DefaultValue="Poco" AddPropertySetter="True" #>
<#@ ShadowEnumProperty Name="RenderMetadataAsAttributesType" EnumType="DataFramework.ModelFramework.MetadataNames.RenderMetadataAsAttributesType" DefaultValue="StandardAndValidation" AddPropertySetter="True" #>
<#@ ShadowEnumProperty Name="CreatedUpdatedFieldsType" EnumType="DataFramework.Transformation.Transformations.CreatedUpdatedGeneratorTransformationType" DefaultValue="None" AddPropertySetter="True" #>
<#@ ShadowEnumProperty Name="DynamicDataObjectInfoType" EnumType="DataFramework.Transformation.Transformations.DynamicDataObjectInfoTransformationType" DefaultValue="None" AddPropertySetter="True" #>
<#@ ShadowEnumProperty Name="ExtendableRepositoryType" EnumType="DataFramework.Transformation.Transformations.ExtendableRepositoryTransformationType" DefaultValue="None" AddPropertySetter="True" #>
<#@ ShadowEnumProperty Name="HistoryTableType" EnumType="DataFramework.Transformation.Transformations.HistoryTableGeneratorTransformationType" DefaultValue="None" AddPropertySetter="True" #>
<#@ ShadowEnumProperty Name="IdFieldTransformationType" EnumType="DataFramework.Transformation.Transformations.IdGeneratorTransformationType" DefaultValue="None" AddPropertySetter="True" #>
<#@ ShadowEnumProperty Name="IsExistingEntityIndicatorType" EnumType="DataFramework.Transformation.Transformations.IsExistingEntityIndicatorGeneratorTransformationType" DefaultValue="None" AddPropertySetter="True" #>
<#@ ShadowEnumProperty Name="RecordIndicatorType" EnumType="DataFramework.Transformation.Transformations.RecordIndicatorGeneratorTransformationType" DefaultValue="None" AddPropertySetter="True" #>
<#@ ShadowEnumProperty Name="RowVersionType" EnumType="DataFramework.Transformation.Transformations.RowVersionGeneratorTransformationType" DefaultValue="None" AddPropertySetter="True" #>
<#@ ShadowEnumProperty Name="StoredProcedureType" EnumType="DataFramework.Transformation.Transformations.StoredProcedureGeneratorTransformationType" DefaultValue="None" AddPropertySetter="True" #>
<#@ ShadowEnumProperty Name="TimeTravelType" EnumType="DataFramework.Transformation.Transformations.TimeTravelGeneratorTransformationType" DefaultValue="None" AddPropertySetter="True" #>
<#+
internal IDataObjectInfo[] DataObjectInfos
{
    get
    {
        return ConnectionString.GetDataObjectInfos("TemporaryAssembly", "", extractRelations: AddPropertiesForRelations, addPropertiesForRelations: AddPropertiesForRelations)
            .Select
            (doi =>
                doi.WithEntityClassType(EntityClassType.ParseEnum<DataFramework.ModelFramework.MetadataNames.EntityClassType>())
                   .WithRepositoryDisposableType(DataFramework.ModelFramework.MetadataNames.RepositoryDisposableType.Never)
                   .WithEntitiesAttributes(RenderMetadataAsAttributesType.ParseEnum<DataFramework.ModelFramework.MetadataNames.RenderMetadataAsAttributesType>())
                   .WithEntitiesNamespace(EntitiesNamespace)
                   .WithQueriesNamespace(QueriesNamespace)
                   .WithDataObjectInfoProviderNamespace(DataObjectInfoProviderNamespace)
                   .WithRepositoriesNamespace(RepositoriesNamespace)
                   .WithQueryParameterTypeName(GenerateQueries ? "{0}Query" : "DataFramework.Common.Contracts.Queries.ISingleEntityQuery")
                   .WithCreatedUpdatedFields(CreatedUpdatedFieldsType.ParseEnum<DataFramework.Transformation.Transformations.CreatedUpdatedGeneratorTransformationType>())
                   .WithDynamicDataObjectInfo(DynamicDataObjectInfoType.ParseEnum<DataFramework.Transformation.Transformations.DynamicDataObjectInfoTransformationType>())
                   .ToExtendable(ExtendableRepositoryType.ParseEnum<DataFramework.Transformation.Transformations.ExtendableRepositoryTransformationType>())
                   .WithHistoryTable(HistoryTableType.ParseEnum<DataFramework.Transformation.Transformations.HistoryTableGeneratorTransformationType>())
                   .WithIdFieldTransformation(IdFieldTransformationType.ParseEnum<DataFramework.Transformation.Transformations.IdGeneratorTransformationType>())
                   .WithIsExistingEntityIndicatorField(IsExistingEntityIndicatorType.ParseEnum<DataFramework.Transformation.Transformations.IsExistingEntityIndicatorGeneratorTransformationType>())
                   .WithRecordIndicatorField(RecordIndicatorType.ParseEnum<DataFramework.Transformation.Transformations.RecordIndicatorGeneratorTransformationType>())
                   .WithRowVersionField(RowVersionType.ParseEnum<DataFramework.Transformation.Transformations.RowVersionGeneratorTransformationType>())
                   .WithStoredProcedures(StoredProcedureType.ParseEnum<DataFramework.Transformation.Transformations.StoredProcedureGeneratorTransformationType>())
                   .WithTimeTravel(TimeTravelType.ParseEnum<DataFramework.Transformation.Transformations.TimeTravelGeneratorTransformationType>())
            ).ToArray();
    }
}
internal bool ShouldSave
{
    get { return !string.IsNullOrEmpty(BasePath) && !DryRun; }
}
internal bool ShouldUseLastGeneratedFiles
{
    get { return !string.IsNullOrEmpty(LastGeneratedFilesFileName); }
}
#>